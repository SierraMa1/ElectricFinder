# docker-compose.yml
version: '3.8'

services:
  # 1. Base de Datos MySQL
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD} # Es mejor usar variables de entorno
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "127.0.0.1:3306:3306"
  # 2. Backend con Node.js
  backend:
    container_name: backend_app
    build: ./backend # Le dice a Docker que construya la imagen desde la carpeta ./backend
    restart: unless-stopped
    ports:
      - "3400:3400"
    volumes: 
      - uploads_data:/app/uploads
    environment:
      # Pasa las mismas variables a tu aplicación de Node
      DB_HOST: mysql # Se conecta usando el nombre del servicio
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      PORT: 3001 # Puerto interno en el que corre tu app
    depends_on:
      mysql:
        condition: service_healthy

  # 3. Frontend con React (servido con Nginx)
  frontend:
    container_name: frontend_app
    build: ./frontend # Construye la imagen desde la carpeta ./frontend
    restart: unless-stopped

  # 4. Proxy Inverso con Nginx (el único punto de entrada)
  proxy:
    container_name: nginx_proxy
    image: nginx:stable-alpine
    restart: unless-stopped
    ports:
      - "80:80"     # Puerto HTTP público
      - "443:443"   # Puerto HTTPS público (para cuando configures SSL)
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/conf.d/default.conf:ro # Monta la configuración de Nginx
      - uploads_data:/usr/share/nginx/html/uploads:ro # El proxy lee desde aquí
      - ~/certbot/conf:/etc/letsencrypt                          # Carpeta para los certificados
      - ~/certbot/www:/var/www/certbot                           # Carpeta para la validación de Certbot
    depends_on:
      - backend
      - frontend

volumes:
  mysql_data: # Define el volumen para persistir los datos de la BD
  uploads_data: # Define el disco compartido